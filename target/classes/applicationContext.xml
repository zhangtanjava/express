<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <context:component-scan base-package="com.zhangtan.*" />
    
  <!--   <aop:aspectj-autoproxy /> -->
    <!-- 
        <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">        
        <property  name="fileEncoding" value="UTF-8"/>         
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="locations">
			<list>
				<value>classpath:config/*.properties</value>
			</list>
		</property>
    </bean>
    配置扫描所有的service、dao（mybatis配置中包含了dao扫描，这里可以不用配置）等，可以全部扫描，也可以分开扫描
    <context:component-scan base-package="com.xxx.xxx.*.*.service" />
	<context:component-scan base-package="com.xxx.xxx.*.*.dao" />
	<context:component-scan base-package="com.xxx.xxx.*.*.其它注解" />
	或所有注解都扫描
	<context:component-scan base-package="com" />
	
	  	配置数据源
  	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />       
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="maxActive" value="${jdbc.maxActive}" />
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxWait" value="${jdbc.maxWait}" />
        配置间隔多久才进行一次检测，检测需要关闭的空闲连接，相当于C3P0的idleConnectionTestPeriod 参数，单位是毫秒
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        配置一个连接在池中最小生存的时间，单位是毫秒
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	测试连接，单位为毫秒
        <property name="validationQueryTimeout" value="300000" />
        <property name="validationQuery" value="SELECT sysdate from dual" />
        <property name="testWhileIdle"   value="true" />
        <property name="testOnBorrow"    value="false" />
        <property name="testOnReturn"    value="false" />
        打开PSCache，并且指定每个连接上PSCache的大小
        如果用Oracle，则把poolPreparedStatements配置为true，MySQL可以配置为false。
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
        属性类型是字符串，通过别名的方式配置扩展插件， 常用的插件有： 监控统计用的filter:stat  日志用的filter:log4j 防御sql注入的filter:wall
        <property name="filters" value="${druid.filters}" />      
    </bean>
    
        扫描所有mapper.xml文件  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="druidDataSource"></property>
	    <property name="configLocation" value="classpath:mybatisConfig.xml"></property>
	    <property name="mapperLocations" value="classpath*:mapper/**/*Mapper.xml"></property>
    </bean> 
    
        扫描所有dao  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.*.*.dao"  
          p:sqlSessionFactoryBeanName="sqlSessionFactory"/>  -->
          
</beans>